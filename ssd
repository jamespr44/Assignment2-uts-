int redLed2 = 8;
int greenLed2 = 9;
int button = 10;
int counter = 9;

const int pins[3] = {5, 6, 3}; // 5 = red, 6 = blue, 3 = green

int colours[][3] = {
  {255, 0, 0},   // Red
  {0, 255, 0},   // Green
  {255, 165, 0}  // Orange
};
 int num_array[10][7] = {
    {1, 1, 1, 1, 1, 1, 0}, // 0
    {0, 1, 1, 0, 0, 0, 0}, // 1
    {1, 1, 0, 1, 1, 0, 1}, // 2
    {1, 1, 1, 1, 0, 0, 1}, // 3
    {0, 1, 1, 0, 0, 1, 1}, // 4
    {1, 0, 1, 1, 0, 1, 1}, // 5
    {1, 0, 1, 1, 1, 1, 1}, // 6
    {1, 1, 1, 0, 0, 0, 0}, // 7
    {1, 1, 1, 1, 1, 1, 1}, // 8
    {1, 1, 1, 0, 0, 1, 1}  // 9
  };


bool sequenceactive = false;

unsigned long Bpressed = 0; // Changed to unsigned long for millis()
unsigned long ssdcounter = 9; // Changed to unsigned long
unsigned long countchange = 0; // Changed to unsigned long
unsigned long i = 0; // Changed to unsigned long
int interval = 50;
unsigned long previousmillis = 0;
unsigned long a = 3000;
unsigned long b = 6000;
unsigned long c = 1000;
unsigned long d = 5000;
unsigned long e = 5000;
unsigned long f = 4000;
unsigned long g = 8000;
unsigned long h = 10000;

void setColour(int colourIndex) {
  analogWrite(pins[0], colours[colourIndex][0]);
  analogWrite(pins[1], colours[colourIndex][1]);
  analogWrite(pins[2], colours[colourIndex][2]);
}

void setup() {
  Serial.begin(9600);

  pinMode(redLed2, OUTPUT);
  pinMode(greenLed2, OUTPUT);

  pinMode(pins[0], OUTPUT);
  pinMode(pins[1], OUTPUT);
  pinMode(pins[2], OUTPUT);

  digitalWrite(redLed2, HIGH);
  setColour(0); // Start with Red

  int segAtoGpinouts[7] = {2, 3, 4, 5, 6, 7, 8}; // this is an array for the pins?
 

  for (int i = 0; i < 7; i++) {
    pinMode(segAtoGpinouts[i], OUTPUT);
  }
}

void loop() {
  i = millis() - Bpressed;

  if ((digitalRead(button) == HIGH) && !sequenceactive) {
    Bpressed = millis();
    sequenceactive = true; // Set the sequenceactive flag
  }

  if (sequenceactive) { // Only execute the sequence when the flag is set
    if (i < a) {
      setColour(0); // Red
    } else if (i >= a && i < (a + b)) {
      setColour(1); // Green
    } else if (i >= (a + b) && i < (a + b + c)) {
      setColour(2); // Orange
    } else if (i >= (a + b + c + d)) {
      digitalWrite(redLed2, LOW);
      digitalWrite(greenLed2, HIGH);
      setColour(2); // Orange

      if (millis() - countchange >= 1000) {
        countchange = millis();
        ssdcounter--;
        if (ssdcounter < 0) {
          ssdcounter = 9;
        }
      }
      ssdNumberWrite(ssdcounter);

      if (millis() - previousmillis >= interval) {
        previousmillis = millis();

        if (digitalRead(redLed2) == LOW) {
          digitalWrite(redLed2, HIGH);
        } else {
          digitalWrite(redLed2, LOW);
          ssdcounter = 9;
          sequenceactive = false;
        }
      }
    }
  }
}

void ssdNumberWrite(int number) {
  int segAtoGpinouts[7] = {2, 3, 4, 5, 6, 7, 8};

  for (int i = 0; i < 7; i++) {
    digitalWrite(segAtoGpinouts[i], num_array[number][i]);
  }
}
